@model mvcdemofolderstructure.Models.UserModel

@{
    ViewBag.Title = "SignUpAuto";
}

<h2>SignUpAuto</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="Imageurl" class="control-label">ImageUrl</label>
            <input type="file" class="form-control" name="UserImageUrl" id="UserrImageUrl" />


        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="Country" class="control-label">country</label>
            @Html.DropDownList("CountryId", (IEnumerable<SelectListItem>)(ViewBag.countrydatasource), "Select Country", htmlAttributes: new
       {
           @class = "form-control"
       })

        </div>

        <div class="form-group">
            <label for="State" class="control-label">state</label>
            @Html.DropDownList("StateId", (IEnumerable<SelectListItem>)(ViewBag.statedatasource), "Select State", htmlAttributes: new
       {
           @class = "form-control"
       })

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<h1>login</h1>
<div class="col-md-4>
    <h4>SignIn</h4>
    <form method="post" class="form-horizontal">
        <div class="form-group">
            <label for="UserName" class="control-label">UserName</label>
            @Html.TextBoxFor(model => model.UserName, htmlAttributes: new
       {
           @class = "form-control"
       })
        </div>

        <div class="form-group">
            <label for="Password" class="control-label">User Password</label>
            @Html.PasswordFor(model => model.Password, htmlAttributes: new
       {
           @class = "form-control"
       })
        </div>

        <div class="btn-group">
            <button class="btn btn-primary" type="submit"><i class="glyphicon glyphicon-user"> </i> > signin </button>
        </div>
    </form>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
